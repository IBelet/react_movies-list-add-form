{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovieInput/NewMovieInput.js","components/NewMovieTextArea/NewMovieTextArea.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovieInput","React","memo","isError","value","handleChange","handleBlur","placeholder","type","name","classNames","input","onChange","onBlur","propTypes","PropTypes","string","isRequired","bool","func","NewMovieTextArea","initialState","titleError","imgUrlError","imdbUrlError","imdbIdError","isValid","urlValidationRegExp","NewMovie","state","validateText","event","target","errorKey","setState","trim","validateUrl","match","handleSubmit","preventDefault","addMovie","props","this","disabled","onSubmit","PureComponent","App","moviesFromServer","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df57a9b8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const NewMovieInput = React.memo(({\n  description,\n  title,\n  isError,\n  value,\n  handleChange,\n  handleBlur,\n  placeholder,\n}) => (\n  <div className=\"field\">\n    <label>\n      <p>\n        {`${description}:`}\n      </p>\n      <input\n        type=\"text\"\n        name={title}\n        placeholder={placeholder}\n        className={classNames({\n          input: true,\n          'is-danger': isError,\n        })}\n        value={value}\n        onChange={handleChange}\n        onBlur={handleBlur}\n      />\n      {isError\n        && (\n          <p className=\"has-text-danger\">\n            Please fill this field with valid data\n          </p>\n        )\n      }\n    </label>\n  </div>\n));\n\nNewMovieInput.propTypes = {\n  description: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  isError: PropTypes.bool.isRequired,\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n};\n\nNewMovieInput.defaultProps = {\n  placeholder: 'Type something',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const NewMovieTextArea = ({\n  description,\n  placeholder,\n  title,\n  value,\n  handleChange,\n}) => (\n  <div className=\"field\">\n    <label>\n      <p>\n        {`${description}:`}\n      </p>\n      <textarea\n        name={title}\n        placeholder={placeholder}\n        className=\"textarea\"\n        value={value}\n        onChange={handleChange}\n      />\n    </label>\n  </div>\n);\n\nNewMovieTextArea.propTypes = {\n  description: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nNewMovieTextArea.defaultProps = {\n  placeholder: 'Type something',\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { NewMovieInput } from '../NewMovieInput/NewMovieInput';\nimport { NewMovieTextArea } from '../NewMovieTextArea/NewMovieTextArea';\n\nconst initialState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n  titleError: false,\n  imgUrlError: false,\n  imdbUrlError: false,\n  imdbIdError: false,\n  isValid: false,\n};\n\n// eslint-disable-next-line max-len\nconst urlValidationRegExp = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends PureComponent {\n  state = initialState\n\n  validateText = (event) => {\n    const { name } = event.target;\n    const errorKey = `${name}Error`;\n\n    this.setState((state) => {\n      if (!state[name].trim()) {\n        return ({\n          [errorKey]: true,\n        });\n      }\n\n      return ({\n        [errorKey]: false,\n      });\n    });\n  }\n\n  validateUrl = (event) => {\n    const { name } = event.target;\n\n    this.setState((state) => {\n      if (!state[name].match(urlValidationRegExp)) {\n        return ({\n          [`${name}Error`]: true,\n        });\n      }\n\n      return ({\n        [`${name}Error`]: false,\n      });\n    });\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n      [`${name}Error`]: false,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n    const { addMovie } = this.props;\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    addMovie(movie);\n\n    this.setState(initialState);\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      titleError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n    } = this.state;\n\n    const disabled = titleError || imgUrlError || imdbUrlError || imdbIdError\n      || !title || !imdbUrl || !imgUrl || !imdbId;\n\n    return (\n      <form\n        onSubmit={this.handleSubmit}\n      >\n        <NewMovieInput\n          description=\"Title\"\n          title=\"title\"\n          isError={titleError}\n          value={title}\n          handleChange={this.handleChange}\n          handleBlur={this.validateText}\n        />\n\n        <NewMovieTextArea\n          description=\"Description\"\n          title=\"description\"\n          value={description}\n          handleChange={this.handleChange}\n        />\n\n        <NewMovieInput\n          description=\"Image link\"\n          placeholder=\"Type valid link\"\n          title=\"imgUrl\"\n          isError={imgUrlError}\n          value={imgUrl}\n          handleChange={this.handleChange}\n          handleBlur={this.validateUrl}\n        />\n\n        <NewMovieInput\n          description=\"Imdb link\"\n          placeholder=\"Type valid link\"\n          title=\"imdbUrl\"\n          isError={imdbUrlError}\n          value={imdbUrl}\n          handleChange={this.handleChange}\n          handleBlur={this.validateUrl}\n        />\n\n        <NewMovieInput\n          description=\"Imdb id\"\n          title=\"imdbId\"\n          isError={imdbIdError}\n          value={imdbId}\n          handleChange={this.handleChange}\n          handleBlur={this.validateText}\n        />\n        <button\n          type=\"submit\"\n          className=\"button is-success normal\"\n          title=\"Fill all fields\"\n          disabled={disabled}\n        >\n          Add new movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}